[{"E:\\ilabs\\Notification_service_FE\\src\\index.js":"1","E:\\ilabs\\Notification_service_FE\\src\\reportWebVitals.js":"2","E:\\ilabs\\Notification_service_FE\\src\\App.js":"3","E:\\ilabs\\Notification_service_FE\\src\\pages\\Team.js":"4","E:\\ilabs\\Notification_service_FE\\src\\components\\Sidebar.js":"5","E:\\ilabs\\Notification_service_FE\\src\\components\\SubMenu.js":"6","E:\\ilabs\\Notification_service_FE\\src\\components\\SidebarData.js":"7","E:\\ilabs\\Notification_service_FE\\src\\pages\\Home.js":"8","E:\\ilabs\\Notification_service_FE\\src\\pages\\fileMail.js":"9","E:\\ilabs\\Notification_service_FE\\src\\pages\\htmlMail.js":"10","E:\\ilabs\\Notification_service_FE\\src\\pages\\scheduleSingleMail.js":"11","E:\\ilabs\\Notification_service_FE\\src\\pages\\createTemplate.js":"12","E:\\ilabs\\Notification_service_FE\\src\\pages\\updateTemplate.js":"13","E:\\ilabs\\Notification_service_FE\\src\\pages\\updateMessageContent.js":"14","E:\\ilabs\\Notification_service_FE\\src\\request\\PostRequests.js":"15","E:\\ilabs\\Notification_service_FE\\src\\request\\GetRequests.js":"16","E:\\ilabs\\Notification_service_FE\\src\\global\\UserGlobalData.js":"17","E:\\ilabs\\Notification_service_FE\\src\\pages\\allMails.js":"18"},{"size":596,"mtime":1676958606111,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1676855754000,"results":"21","hashOfConfig":"20"},{"size":1441,"mtime":1678691844614,"results":"22","hashOfConfig":"20"},{"size":148,"mtime":1677663439591,"results":"23","hashOfConfig":"20"},{"size":2014,"mtime":1677128475954,"results":"24","hashOfConfig":"20"},{"size":1689,"mtime":1676980271900,"results":"25","hashOfConfig":"20"},{"size":2955,"mtime":1679987344729,"results":"26","hashOfConfig":"20"},{"size":2111,"mtime":1677663385290,"results":"27","hashOfConfig":"20"},{"size":15002,"mtime":1680066663066,"results":"28","hashOfConfig":"20"},{"size":13016,"mtime":1677838035434,"results":"29","hashOfConfig":"20"},{"size":10077,"mtime":1680063646539,"results":"30","hashOfConfig":"20"},{"size":8489,"mtime":1677833495665,"results":"31","hashOfConfig":"20"},{"size":5518,"mtime":1678772360695,"results":"32","hashOfConfig":"20"},{"size":7128,"mtime":1677663448000,"results":"33","hashOfConfig":"20"},{"size":730,"mtime":1680063505578,"results":"34","hashOfConfig":"20"},{"size":684,"mtime":1678683213625,"results":"35","hashOfConfig":"20"},{"size":189,"mtime":1678350791592,"results":"36","hashOfConfig":"20"},{"size":2250,"mtime":1678686241383,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"msngxn",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},"E:\\ilabs\\Notification_service_FE\\src\\index.js",[],["83","84"],"E:\\ilabs\\Notification_service_FE\\src\\reportWebVitals.js",[],"E:\\ilabs\\Notification_service_FE\\src\\App.js",["85"],"import React from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport FileMail from './pages/fileMail'\nimport Team from \"./pages/Team\";\n//import htmlMail from \"./pages/htmlMail\";\nimport ScheduleSingleMail from \"./pages/scheduleSingleMail\";\nimport CreateTemplate from \"./pages/createTemplate\";\nimport UpdateTemplate from \"./pages/updateTemplate\";\nimport UpdateMessageContent from \"./pages/updateMessageContent\";\nimport HtmlMail from \"./pages/htmlMail\";\nimport AllMails from \"./pages/allMails\";\nimport ViewEmailContent from \"./pages/updateTemplate\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <Sidebar />\n      <Switch>\n        <Route path=\"/overview\" exact component={Home} />\n        <Route path=\"/email\" exact component={FileMail} />\n        <Route path=\"/email2\" exact component={HtmlMail} />\n        <Route path=\"/team\" exact component={Team} />\n        <Route path=\"/schedule/singlemail\" exact component={ScheduleSingleMail}/>\n        <Route path =\"/create/template\"  exact component={CreateTemplate}/>\n        <Route path =\"/update/template/:templateName\"  exact component={ViewEmailContent}/>\n       <Route path=\"/all/mails\" exact component={AllMails}/>\n        <Route path =\"/update/message\"  exact component={UpdateMessageContent}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","E:\\ilabs\\Notification_service_FE\\src\\pages\\Team.js",[],"E:\\ilabs\\Notification_service_FE\\src\\components\\Sidebar.js",["86","87","88","89","90","91"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { SidebarData } from './SidebarData';\nimport SubMenu from './SubMenu';\nimport { IconContext } from 'react-icons/lib';\nimport user from '../images/user.jpg';\nimport logo from '../images/cover.png'\n\nconst Nav = styled.div`\n  background: #fafafa;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n  align-items: center;\n`;\n\nconst NavIcon = styled(Link)`\n  margin-left: 2rem;\n  font-size: 2rem;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst SidebarNav = styled.nav`\n  background: #FFFFFF;\n  width: 300px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  box-shadow: rgba(235, 255, 232) 0px 8px 24px;\n  position: fixed;\n  top: 0;\n  overflow: hidden;\n`;\n\nconst SidebarWrap = styled.div`\n  height: 100%;\n  overflow: auto;\n`;\n\nconst Sidebar = () => {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  // Set \"isActive\" to true for the first item in SidebarData\n  SidebarData[0].isActive = true;\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#000000' }}>\n        <Nav>\n        <img src={user} style={{ width: '3%', height: '60%', marginLeft:\"90%\"}}/> <a style={{marginLeft:\"2%\" , fontWeight:\"600\"}}>John</a> \n         \n        </Nav>\n        <SidebarNav sidebar={sidebar}>\n          <img src={logo} style={{ width: '50%', height: 'auto', marginLeft:'15%' , marginTop:'10%' ,marginBottom:'10%'}} alt=\"logo\" />\n          <SidebarWrap>\n            {SidebarData.map((item, index) => {\n              return <SubMenu item={item} key={index} />;\n            })}\n          </SidebarWrap>\n        </SidebarNav>\n      </IconContext.Provider>\n    </>\n  );\n};\n\nexport default Sidebar;\n","E:\\ilabs\\Notification_service_FE\\src\\components\\SubMenu.js",[],"E:\\ilabs\\Notification_service_FE\\src\\components\\SidebarData.js",[],"E:\\ilabs\\Notification_service_FE\\src\\pages\\Home.js",[],"E:\\ilabs\\Notification_service_FE\\src\\pages\\fileMail.js",["92"],"E:\\ilabs\\Notification_service_FE\\src\\pages\\htmlMail.js",["93"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { PostHtmlMail } from \"../request/PostRequests\";\n\nconst HtmlMail = () => {\n  const [receiverEmail, setReceiverEmail] = useState(\"\");\n  const [receiverMobile, setReceiverMobile] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [productQuantity, setProductQuantity] = useState(\"\");\n  const [productUrl, setProductUrl] = useState(\"\");\n  const [bannerUrl, setBannerUrl] = useState(\"\");\n  const [templateName, setTemplateName] = useState(\"\");\n  const postHtmlMailUrl = PostHtmlMail();\n\n  // Function that handles button click event\n  const handleButton = async (e) => {\n    e.preventDefault();\n\n    // Check if all necessary fields are filled out\n    if (\n      !productName ||\n      !productQuantity ||\n      !productUrl ||\n      !receiverEmail ||\n      !bannerUrl ||\n      !receiverMobile ||\n      !title ||\n      !templateName ||\n      !userId\n    ) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Please fill out all fields!\",\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 4000,\n      });\n    } else {\n      // If all fields are filled out, call postMailTemplate function\n      await postHtmlMail();\n    }\n  };\n\n  // Function that makes a POST request to server to send a html new email\n  function postHtmlMail() {\n    // Use axios library to make POST request to server\n    axios\n      .post(postHtmlMailUrl, {\n        mail: {\n          content: {},\n          ordersList: [\n            {\n              productName: productName,\n              productQuantity: productQuantity,\n              productUrl: productUrl,\n            },\n          ],\n          receiverEmail: receiverEmail,\n          topBannerAdUrl: bannerUrl,\n        },\n        mobileNo: receiverMobile,\n        notification: {\n          content: {\n            title: title,\n          },\n        },\n        templateName: templateName,\n        userId: userId,\n      })\n      .then((res) => {\n        console.log(res);\n        const { data, status } = res;\n        if (status === 200) {\n          // If request is successful, display success message using SweetAlert2 library\n          Swal.fire({\n            icon: \"success\",\n            title: data,\n            text: \"🙂\",\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            timer: 4000,\n          });\n        }\n      });\n  }\n\n  return (\n    <div>\n      <div className=\"report\">\n        <div class=\"container\" style={{ marginLeft: \"24%\" }}>\n          <div class=\"row\">\n            <div class=\"col-lg-7 mx-auto\">\n              <div\n                class=\"card mt-2  mx-auto p-4 bg-light\"\n                style={{\n                  boxShadow: \" rgba(0, 0, 0, 0.15) 0px 5px 15px 0px\",\n                  border: \"none\",\n                }}\n              >\n                <div class=\"card-body bg-light\">\n                  <h4\n                    style={{\n                      borderLeft: \"6px solid #000000\",\n                      fontWeight: \"bold\",\n                      color: \"#0ac74a\",\n                    }}\n                  >\n                    {\" \"}\n                    <div style={{ marginLeft: \"2%\" }}>Send HTML Mails ✉️</div>\n                  </h4>\n                  <div class=\"container\">\n                    <form id=\"contact-form\" role=\"form\">\n                      <div class=\"controls\">\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_name\">Receiver's Email *</label>\n                              <input\n                                id=\"form_name\"\n                                type=\"text\"\n                                name=\"name\"\n                                class=\"form-control\"\n                                placeholder=\"example@gmail.com *\"\n                                required=\"required\"\n                                data-error=\"Email is required.\"\n                                onChange={(e) => {\n                                  setReceiverEmail(e.target.value);\n                                }}\n                              />\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_lastname\">\n                                Receiver's Mobile Number *\n                              </label>\n                              <input\n                                id=\"form_lastname\"\n                                type=\"text\"\n                                name=\"surname\"\n                                class=\"form-control\"\n                                placeholder=\"+941111111 *\"\n                                required=\"required\"\n                                data-error=\"Mobile number is required.\"\n                                onChange={(e) => {\n                                  setReceiverMobile(e.target.value);\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_email\">User Id *</label>\n                              <select\n                                id=\"form_need\"\n                                name=\"need\"\n                                class=\"form-control\"\n                                required=\"required\"\n                                data-error=\"Please specify your need.\"\n                                onChange={(e) => {\n                                  setUserId(e.target.value);\n                                }}\n                              >\n                                <option value=\"\" selected disabled>\n                                  --Select--\n                                </option>\n                                <option>100</option>\n                                <option>200</option>\n                              </select>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_email\">Title *</label>\n                              <input\n                                id=\"form_email\"\n                                type=\"text\"\n                                name=\"email\"\n                                class=\"form-control\"\n                                placeholder=\"example *\"\n                                required=\"required\"\n                                data-error=\"Title is required.\"\n                                onChange={(e) => {\n                                  setTitle(e.target.value);\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_email\">Product name *</label>\n                              <input\n                                id=\"form_email\"\n                                type=\"text\"\n                                name=\"email\"\n                                class=\"form-control\"\n                                placeholder=\"Lightweight Mobility  *\"\n                                required=\"required\"\n                                data-error=\"Product name is required.\"\n                                onChange={(e) => {\n                                  setProductName(e.target.value);\n                                }}\n                              />\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_email\">Product quantity *</label>\n                              <input\n                                id=\"form_email\"\n                                type=\"text\"\n                                name=\"email\"\n                                class=\"form-control\"\n                                placeholder=\"5 *\"\n                                required=\"required\"\n                                data-error=\"Product quantity is required.\"\n                                onChange={(e) => {\n                                  setProductQuantity(e.target.value);\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_email\">\n                                Product image url *\n                              </label>\n                              <input\n                                id=\"form_email\"\n                                type=\"text\"\n                                name=\"email\"\n                                class=\"form-control\"\n                                placeholder=\" http://www.example.com/index.html *\"\n                                required=\"required\"\n                                data-error=\"Product image  is required.\"\n                                onChange={(e) => {\n                                  setProductUrl(e.target.value);\n                                }}\n                              />\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_email\">\n                                Top banner image url *\n                              </label>\n                              <input\n                                id=\"form_email\"\n                                type=\"email\"\n                                name=\"email\"\n                                class=\"form-control\"\n                                placeholder=\" http://www.example.com/index.html *\"\n                                required=\"required\"\n                                data-error=\"Top banner image is required.\"\n                                onChange={(e) => {\n                                  setBannerUrl(e.target.value);\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_need\">\n                                Select template name *\n                              </label>\n                              <select\n                                id=\"form_need\"\n                                name=\"need\"\n                                class=\"form-control\"\n                                required=\"required\"\n                                data-error=\"Template name is required.\"\n                                onChange={(e) => {\n                                  setTemplateName(e.target.value);\n                                }}\n                              >\n                                <option value=\"\" selected disabled>\n                                  --Select--\n                                </option>\n                                <option>\n                                  order_confirmation_email_to_customer\n                                </option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-md-12\">\n                            <input\n                              type=\"submit\"\n                              class=\"btn btn-send  pt-2 btn-block\"\n                              value=\"Send Notification ✅\"\n                              onClick={(e) => {\n                                handleButton(e);\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HtmlMail;\n","E:\\ilabs\\Notification_service_FE\\src\\pages\\scheduleSingleMail.js",["94","95"],"E:\\ilabs\\Notification_service_FE\\src\\pages\\createTemplate.js",["96"],"import React, { useState } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { PostMailTemplate } from \"../request/PostRequests\";\n\nconst CreateTemplate = () => {\n  const [templateName, setTemplateName] = useState(\"\");\n  const [subjectName, setSubjectName] = useState(\"\");\n  const [data, setData] = useState(\n    \"<html > <top-banner-advertisement> <h4>Hey <non-editable><receiver-name></non-editable>,</h4> <p>Thank you for placing a rental request on Cloud of Goods. We're waiting for one of our partners to accept your order. You will hear back from us as soon as the order is accepted. In the meantime, please review the details below and let us know of any changes. Please note that your credit card will not be charged until the order is accepted.</p> <h2>Order Summary Order #<non-editable><order-no></non-editable></h2> <non-editable><item-details-section></non-editable> <h3>Delivery Date: <non-editable><delivery-date></non-editable></h3> <h3>Delivery Time: <non-editable><delivery-time></non-editable></h3> <h3>Delivery Location: <non-editable><delivery-location-address></non-editable></h3> <h3>Pickup Date: <non-editable><pick-up-date></non-editable></h3> <h3>Pickup Time: <non-editable><pick-up-time></non-editable></h3> <h3>Pickup Location: <non-editable><pickup-location-address></non-editable></h3> <h2>Price Summary</h2> <h5>Total rental amount <non-editable><total-rental-amount></non-editable></h5> <h5>Damage Waiver <non-editable><damage-waiver-amount></non-editable></h5> <h4>Total paid <non-editable><total-paid-amount></non-editable></h4> <p>Please thoroughly review the above reservation details. If you have any questions or would like to modify the order, please reply directly to this email.</p> <p>* This does not happen often, but if the requested delivery times are already taken, <non-editable><vendor-name></non-editable> will give you a call to make adjustments.</p> <h2>Rules & Responsibilities</h2> <h4>● All items are carefully inspected before and after rentals. Any damage upon return is subject to additional fees. </h4> <h4>● You may reschedule delivery or change the order details only if <non-editable><vendor-name></non-editable> allows such options.</h4> <h4>● You may cancel or modify this order by logging into your Cloud of Goods account or sending an email to info@cloudofgoods.com with the subject: [CANCEL] <order-no> or [Modify] <order-no>. All cancellations are subject to our cancellation policy.</h4> <h4>We’ll see you then, cheers!</h4></br> - <non-editable><mail-send-by></non-editable> </html>\"\n  );\n  const postMailTemplateUrl = PostMailTemplate();\n\n  // Function that handles button click event\n  const handleButton = async (e) => {\n    e.preventDefault();\n\n    // Check if all necessary fields are filled out\n    if (!templateName || !subjectName || !data) {\n      // If not, display error message using SweetAlert2 library\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Please fill out all fields!\",\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 4000,\n      });\n    } else {\n      // If all fields are filled out, call postMailTemplate function\n      await postMailTemplate();\n    }\n  };\n\n  // Function that makes a POST request to server to create a new email template\n  function postMailTemplate() {\n    // Use axios library to make POST request to server\n    axios\n      .post(postMailTemplateUrl, {\n        editedEmailContent: data,\n        editedEmailSubject: subjectName,\n        templateName: templateName,\n      })\n      .then((res) => {\n        console.log(res);\n        const { data, status } = res;\n        if (status === 200) {\n          // If request is successful, display success message using SweetAlert2 library\n          Swal.fire({\n            icon: \"success\",\n            title: data,\n            text: \"🙂\",\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            timer: 4000,\n          });\n        }\n      });\n  }\n\n  return (\n    <div>\n      <div className=\"template\">\n        <div class=\"container\" style={{ marginLeft: \"24%\" }}>\n          <div class=\"row\">\n            <div class=\"col-lg-7 mx-auto\">\n              <div\n                class=\"card mt-2  mx-auto p-4 bg-light\"\n                style={{\n                  boxShadow: \" rgba(0, 0, 0, 0.15) 0px 5px 15px 0px\",\n                  border: \"none\",\n                }}\n              >\n                <div class=\"card-body bg-light\">\n                  <h4\n                    style={{\n                      borderLeft: \"6px solid #000000\",\n                      fontWeight: \"bold\",\n                      color: \"#0ac74a\",\n                    }}\n                  >\n                    {\" \"}\n                    <div style={{ marginLeft: \"2%\" }}>Create Template 📝</div>\n                  </h4>\n                  <div class=\"container\">\n                    <form id=\"contact-form\" role=\"form\">\n                      <div class=\"controls\">\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_name\">Template Name *</label>\n                              <input\n                                id=\"form_name\"\n                                type=\"text\"\n                                name=\"name\"\n                                class=\"form-control\"\n                                placeholder=\"order_delivered_email_to_customer *\"\n                                required=\"required\"\n                                data-error=\"Template name is required.\"\n                                onChange={(e) => {\n                                  setTemplateName(e.target.value);\n                                }}\n                              />\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_lastname\">Email Subject *</label>\n                              <input\n                                id=\"form_lastname\"\n                                type=\"text\"\n                                name=\"surname\"\n                                class=\"form-control\"\n                                placeholder=\"We received your rental request. Here’s what happens next*\"\n                                required=\"required\"\n                                data-error=\"Email subject is required.\"\n                                onChange={(e) => {\n                                  setSubjectName(e.target.value);\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-12\">\n                            <div class=\"form-group\">\n                              <label for=\"form_message\">\n                                Create Your Template *\n                              </label>\n\n                              <div className=\"editor-container\">\n                                <CKEditor\n                                  editor={ClassicEditor}\n                                  data={data}\n                                  onChange={(e) => {\n                                    setData(e.target.value);\n                                  }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"col-md-12\">\n                            <input\n                              type=\"submit\"\n                              class=\"btn btn-send  pt-2 btn-block\"\n                              value=\"Create Template ✅\"\n                              onClick={(e) => {\n                                handleButton(e);\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateTemplate;\n","E:\\ilabs\\Notification_service_FE\\src\\pages\\updateTemplate.js",["97","98","99"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useGlobalState } from \"../global/UserGlobalData\";\nimport { useParams } from \"react-router-dom\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nfunction ViewEmailContent() {\n  const { templateName } = useParams();\n  const [mailArray, setMailArray] = useState([]);\n  const [mailList, setMailList] = useState([]);\n  //const [subject, setSubject] = useState(\"\");\n  const getTemplateDetailUrl = `http://localhost:8080/api/v5/manage-mail/view-email-content?templateName=${templateName}`;\n\n  useEffect(() => {\n    axios\n      .get(getTemplateDetailUrl, {})\n      .then((response) => {\n        var mailData = response.data;\n        setMailArray(mailData);\n        console.log(\"mailData: \", mailData);\n\n        if (Array.isArray(mailData)) {\n          // Check if mailData is an array\n          setMailArray(mailData);\n          setMailList(mailData);\n          //setSubject(mailData[0].subject);\n        } else {\n          console.log(\"mailData is not an array\");\n        }\n      })\n      .catch(function (error) {\n        if (error.response) {\n          console.log(\"error.response.data\", error.response.data);\n          console.log(\"error.response.status\", error.response.status);\n        } else if (error.request) {\n          console.log(\"error.request\", error.request);\n        } else {\n          console.log(\"error.message\", error.message);\n        }\n      });\n  }, [getTemplateDetailUrl, templateName]);\n\n  const subject = mailArray.subject;\n  const template = mailArray.templateName;\n  const content = mailArray.content;\n\n  return (\n    <div>\n      <div className=\"template\">\n        <div class=\"container\" style={{ marginLeft: \"24%\" }}>\n          <div class=\"row\">\n            <div class=\"col-lg-7 mx-auto\">\n              <div\n                class=\"card mt-2  mx-auto p-4 bg-light\"\n                style={{\n                  boxShadow: \" rgba(0, 0, 0, 0.15) 0px 5px 15px 0px\",\n                  border: \"none\",\n                }}\n              >\n                <div class=\"card-body bg-light\">\n                  <h4\n                    style={{\n                      borderLeft: \"6px solid #000000\",\n                      fontWeight: \"bold\",\n                      color: \"#0ac74a\",\n                    }}\n                  >\n                    {\" \"}\n                    <div style={{ marginLeft: \"2%\" }}>Update Template 📝</div>\n                  </h4>\n\n                  <div class=\"container\">\n                    <form id=\"contact-form\" role=\"form\">\n                      <div class=\"controls\">\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_name\">Template Name *</label>\n                              <input\n                                id=\"form_lastname\"\n                                type=\"text\"\n                                name=\"surname\"\n                                class=\"form-control\"\n                                value={template}\n                                required=\"required\"\n                                data-error=\"Email subject is required.\"\n                              />\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_lastname\">Email Subject *</label>\n                              <input\n                                id=\"form_lastname\"\n                                type=\"text\"\n                                name=\"surname\"\n                                class=\"form-control\"\n                                value={subject}\n                                required=\"required\"\n                                data-error=\"Email subject is required.\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-12\">\n                            <div class=\"form-group\">\n                              <label for=\"form_message\">\n                                Create Your Template *\n                              </label>\n\n                              <div className=\"editor-container\">\n                                <CKEditor\n                                  editor={ClassicEditor}\n                                  data={content}\n                                  //onChange={(event, editor) => {\n                                  //setData(editor.getData());\n                                  //}}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"col-md-12\">\n                            <input\n                              type=\"submit\"\n                              class=\"btn btn-send  pt-2 btn-block\"\n                              value=\"Create Template✅\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ViewEmailContent;\n","E:\\ilabs\\Notification_service_FE\\src\\pages\\updateMessageContent.js",["100","101","102","103"],"import React, { useState } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nconst UpdateMessageContent = () => {\n  return (\n    <div>\n      <div className=\"message\">\n        <div class=\"container\" style={{ marginLeft: \"24%\" }}>\n          <div class=\"row\">\n            <div class=\"col-lg-7 mx-auto\">\n              <div\n                class=\"card mt-2  mx-auto p-4 bg-light\"\n                style={{\n                  boxShadow: \" rgba(0, 0, 0, 0.15) 0px 5px 15px 0px\",\n                  border: \"none\",\n                }}\n              >\n                <div class=\"card-body bg-light\">\n                  <h4\n                    style={{\n                      borderLeft: \"6px solid #000000\",\n                      fontWeight: \"bold\",\n                      color: \"#0ac74a\",\n                    }}\n                  >\n                    {\" \"}\n                    <div style={{ marginLeft: \"2%\" }}>\n                      Update Message Content 📝\n                    </div>\n                  </h4>\n                  <div class=\"container\">\n                    <form id=\"contact-form\" role=\"form\">\n                      <div class=\"controls\">\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_name\">Template Name *</label>\n                              <select\n                                id=\"form_need\"\n                                name=\"need\"\n                                class=\"form-control\"\n                                required=\"required\"\n                                data-error=\"Please specify your need.\"\n                              >\n                                <option value=\"\" selected disabled>\n                                  --Select--\n                                </option>\n                                <option>\n                                  order_confirmation_email_to_customer\n                                </option>\n                                <option>\n                                  order_delivered_email_to_customer\n                                </option>\n                              </select>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label for=\"form_lastname\">Message Title *</label>\n                              <input\n                                id=\"form_lastname\"\n                                type=\"text\"\n                                name=\"surname\"\n                                class=\"form-control\"\n                                placeholder=\"Hey <non-editable><user-name></non-editable>, your order has been accepted*\"\n                                required=\"required\"\n                                data-error=\"Email subject is required.\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-12\">\n                            <div class=\"form-group\">\n                              <label for=\"form_message\">Message Body *</label>\n                              {/* <textarea id=\"form_message\" name=\"message\" class=\"form-control\" rows=\"10\" required=\"required\" value=\"<html> <top-banner-advertisement> <h4>Hey <non-editable><receiver-name></non-editable>,</h4> <p>Thank you for placing a rental request on Cloud of Goods. We're waiting for one of our partners to accept your order. You will hear back from us as soon as the order is accepted. In the meantime, please review the details below and let us know of any changes. Please note that your credit card will not be charged until the order is accepted.</p> <h2>Order Summary Order #<non-editable><order-no></non-editable></h2> <non-editable><item-details-section></non-editable> <h3>Delivery Date: <non-editable><delivery-date></non-editable></h3> <h3>Delivery Time: <non-editable><delivery-time></non-editable></h3> <h3>Delivery Location: <non-editable><delivery-location-address></non-editable></h3> <h3>Pickup Date: <non-editable><pick-up-date></non-editable></h3> <h3>Pickup Time: <non-editable><pick-up-time></non-editable></h3> <h3>Pickup Location: <non-editable><pickup-location-address></non-editable></h3> <h2>Price Summary</h2> <h5>Total rental amount <non-editable><total-rental-amount></non-editable></h5> <h5>Damage Waiver <non-editable><damage-waiver-amount></non-editable></h5> <h4>Total paid <non-editable><total-paid-amount></non-editable></h4> <p>Please thoroughly review the above reservation details. If you have any questions or would like to modify the order, please reply directly to this email.</p> <p>* This does not happen often, but if the requested delivery times are already taken, <non-editable><vendor-name></non-editable> will give you a call to make adjustments.</p> <h2>Rules & Responsibilities</h2> <h4>● All items are carefully inspected before and after rentals. Any damage upon return is subject to additional fees. </h4> <h4>● You may reschedule delivery or change the order details only if <non-editable><vendor-name></non-editable> allows such options.</h4> <h4>● You may cancel or modify this order by logging into your Cloud of Goods account or sending an email to info@cloudofgoods.com with the subject: [CANCEL] <order-no> or [Modify] <order-no>. All cancellations are subject to our cancellation policy.</h4> <h4>We’ll see you then, cheers!</h4></br> - <non-editable><mail-send-by></non-editable> </html>\" data-error=\"base64 encoded file is required.\" >\n                      \n</textarea> */}\n                              <input\n                                id=\"form_lastname\"\n                                type=\"text\"\n                                name=\"surname\"\n                                class=\"form-control\"\n                                placeholder=\"We’re delighted that your order has been accepted by <non-editable><vendor-name></non-editable>. They’ll be in touch with you to make delivery arrangements. Your order is now confirmed.*\"\n                                required=\"required\"\n                                data-error=\"Email subject is required.\"\n                              />\n                            </div>\n                          </div>\n                          <div class=\"col-md-12\">\n                            <input\n                              type=\"submit\"\n                              class=\"btn btn-send  pt-2 btn-block\"\n                              value=\"Create Template✅\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UpdateMessageContent;\n","E:\\ilabs\\Notification_service_FE\\src\\request\\PostRequests.js",[],"E:\\ilabs\\Notification_service_FE\\src\\request\\GetRequests.js",["104","105","106"],"import { useGlobalState } from \"../global/UserGlobalData\";\r\n\r\nfunction GetTemplateDetails() {\r\n\r\n  const [templateName , setTemplateName]=useGlobalState(\"templateName\");\r\n\r\n    const getTemplateDetailsUrl ='http://localhost:8080/api/v5/manage-mail/template-names';\r\n  \r\n    return getTemplateDetailsUrl ;\r\n  }\r\n\r\n  function GetTemplateDetailBytemplateName() {\r\n\r\n    const [templateName , setTemplateName]=useGlobalState(\"templateName\");\r\n  \r\n      const getTemplateDetailUrl =`http://localhost:8080/api/v5/manage-mail/view-email-content?templateName=${templateName}`;\r\n    \r\n      return getTemplateDetailUrl ;\r\n    }\r\n\r\n  export {GetTemplateDetails,GetTemplateDetailBytemplateName};","E:\\ilabs\\Notification_service_FE\\src\\global\\UserGlobalData.js",[],"E:\\ilabs\\Notification_service_FE\\src\\pages\\allMails.js",["107","108"],"import React, { useState, useEffect } from \"react\";\r\nimport { GetTemplateDetails } from \"../request/GetRequests\";\r\nimport { useGlobalState } from \"../global/UserGlobalData\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst AllMails = () => {\r\n  const [mailArray, setMailArray] = useState([]);\r\n  const [mailList, setMailList] = useGlobalState(\"mailList\");\r\n  const getMailURL = GetTemplateDetails();\r\n\r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .get(getMailURL, {})\r\n      .then((response) => {\r\n        var mailData = response.data;\r\n        setMailArray(mailData);\r\n        setMailList(mailData);\r\n        console.log(\"mailData: \", mailData);\r\n        console.log(\"Response: \", response.data);\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          console.log(\"error.response.data\", error.response.data);\r\n          console.log(\"error.response.status\", error.response.status);\r\n        } else if (error.request) {\r\n          console.log(\"error.request\", error.request);\r\n        } else {\r\n          console.log(\"error.message\", error.message);\r\n        }\r\n      });\r\n  }, [getMailURL, mailArray.length]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"table-container\">\r\n        <br />\r\n        <h2>ALL MAIL TEMPLATES 📨</h2>\r\n        <br />\r\n        <table className=\"table\">\r\n          <thead className=\"table-dark\">\r\n            <tr>\r\n              <th>#Id</th>\r\n              <th>template_name</th>\r\n              <th>mail_subject</th>\r\n              <th> mail_html_content</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {mailArray.map((mail, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <th scope=\"row\">{index + 1}</th>\r\n                  <td>{mail.templateName}</td>\r\n                  <td>{mail.subject}</td>\r\n                  <td>{mail.content}</td>\r\n                  <td>\r\n                  <Link to={`/update/template/${mail.templateName}`} className=\"btn btn-success\">Edit</Link>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllMails;\r\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":22},{"ruleId":"113","severity":1,"message":"117","line":4,"column":13,"nodeType":"115","messageId":"116","endLine":4,"endColumn":20},{"ruleId":"113","severity":1,"message":"118","line":5,"column":13,"nodeType":"115","messageId":"116","endLine":5,"endColumn":20},{"ruleId":"113","severity":1,"message":"119","line":21,"column":7,"nodeType":"115","messageId":"116","endLine":21,"endColumn":14},{"ruleId":"113","severity":1,"message":"120","line":51,"column":9,"nodeType":"115","messageId":"116","endLine":51,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":60,"column":9,"nodeType":"123","endLine":60,"endColumn":82},{"ruleId":"124","severity":1,"message":"125","line":60,"column":83,"nodeType":"123","endLine":60,"endColumn":131},{"ruleId":"126","severity":1,"message":"127","line":122,"column":21,"nodeType":"123","endLine":122,"endColumn":57},{"ruleId":"126","severity":1,"message":"127","line":116,"column":21,"nodeType":"123","endLine":116,"endColumn":57},{"ruleId":"113","severity":1,"message":"128","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":38,"column":21,"nodeType":"123","endLine":38,"endColumn":57},{"ruleId":"126","severity":1,"message":"127","line":88,"column":21,"nodeType":"123","endLine":88,"endColumn":57},{"ruleId":"113","severity":1,"message":"129","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":24},{"ruleId":"113","severity":1,"message":"130","line":11,"column":10,"nodeType":"115","messageId":"116","endLine":11,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":74,"column":21,"nodeType":"123","endLine":74,"endColumn":57},{"ruleId":"113","severity":1,"message":"131","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"132","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":18},{"ruleId":"113","severity":1,"message":"133","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":33,"column":21,"nodeType":"123","endLine":33,"endColumn":57},{"ruleId":"113","severity":1,"message":"134","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":22},{"ruleId":"113","severity":1,"message":"135","line":5,"column":25,"nodeType":"115","messageId":"116","endLine":5,"endColumn":40},{"ruleId":"113","severity":1,"message":"135","line":14,"column":27,"nodeType":"115","messageId":"116","endLine":14,"endColumn":42},{"ruleId":"113","severity":1,"message":"130","line":9,"column":10,"nodeType":"115","messageId":"116","endLine":9,"endColumn":18},{"ruleId":"136","severity":1,"message":"137","line":33,"column":6,"nodeType":"138","endLine":33,"endColumn":36,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'UpdateTemplate' is defined but never used.","Identifier","unusedVar","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'NavIcon' is assigned a value but never used.","'showSidebar' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'PostSchedularMail' is defined but never used.","'useGlobalState' is defined but never used.","'mailList' is assigned a value but never used.","'useState' is defined but never used.","'CKEditor' is defined but never used.","'ClassicEditor' is defined but never used.","'templateName' is assigned a value but never used.","'setTemplateName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMailList'. Either include it or remove the dependency array.","ArrayExpression",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [getMailURL, mailArray.length, setMailList]",{"range":"145","text":"146"},[1135,1165],"[getMailURL, mailArray.length, setMailList]"]